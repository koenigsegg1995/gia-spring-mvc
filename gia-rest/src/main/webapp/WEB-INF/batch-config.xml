<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/batch
           http://www.springframework.org/schema/batch/spring-batch.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 啟用 StepScope -->
    <bean class="org.springframework.batch.core.scope.StepScope">
        <property name="autoProxy" value="true"/>
    </bean>

    <!-- 定義 jobRepository -->
    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!-- 定義 jobLauncher -->
    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <!-- 定義 reader -->
    <bean id="empReader" class="org.mybatis.spring.batch.MyBatisPagingItemReader" scope="step">
        <aop:scoped-proxy/>
        <!-- 注入 MyBatis 的 SqlSessionFactory -->
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <!-- 指定要執行的 Mapper 方法的完整路徑 -->
        <property name="queryId" value="iisi.example.gia.emp2.dao.Emp2DAO.selectForExport"/>
        <!-- 設定每次讀取的筆數 -->
        <property name="pageSize" value="10"/>
    </bean>

    <!-- 定義 processor -->
    <bean id="empProcessor" class="iisi.example.gia.task.EmpItemProcessor" scope="step">
        <aop:scoped-proxy/>
    </bean>

    <!-- 定義 writer -->
    <bean id="empWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <aop:scoped-proxy/>
        <!-- 設定檔案輸出路徑，使用 Spring EL 表達式讀取常數類別中的值 -->
        <property name="resource" value="file:#{servletContext.getRealPath(T(iisi.example.gia.batchconfig.BatchConstants).EXPORT_PATH)}/emp2_export.csv"/>

        <!-- 設定檔案編碼 -->
        <property name="encoding" value="UTF-8"/>

        <!-- 設定如何將物件轉換成 CSV 格式 -->
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <!-- 設定欄位分隔符 -->
                <property name="delimiter" value=","/>

                <!-- 設定如何從物件中取得欄位值 -->
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <!-- 指定要輸出的欄位名稱 -->
                        <property name="names" value="empno,ename,job,hiredate,sal,comm,deptno,dname"/>
                    </bean>
                </property>
            </bean>
        </property>

        <!-- 設定 CSV 表頭 -->
        <property name="headerCallback">
            <bean class="iisi.example.gia.batchconfig.ExportFlatFileHeaderCallbackImpl">
                <property name="header" value="員工編號,員工姓名,職位,到職日,薪資,獎金,部門編號,部門名稱"/>
            </bean>
        </property>
    </bean>

    <!-- 定義 job -->
    <batch:job id="exportEmpJob" job-repository="jobRepository">
        <batch:step id="exportEmpStep">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:chunk
                        reader="empReader"
                        processor="empProcessor"
                        writer="empWriter"
                        commit-interval="20"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

</beans>